<ResourceDictionary x:Class="SkyGuide.PostInfoControlDic"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SkyGuide" 
                    xmlns:System="clr-namespace:System;assembly=mscorlib">
    <local:TrimmedTextBlockVisibilityConverter x:Key="TrimmedTextBlockVisibilityConverter"/>
    <local:SiteUrlConverter x:Key="SiteUrlConverter"/>
    <local:FileSizeConverter x:Key="FileSizeConverter"/>
    <local:PostDetailConverter x:Key="PostDetailConverter"/>
    <local:PostDetailConverter x:Key="PostInfoListConverter"/>
    <local:TagTypeToNameConverter x:Key="TagTypeToNameConverter"/>
    <local:TagGroupConverter x:Key="TagGroupConverter"/>

    <Style x:Key="TabItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3,3,3,1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
    <LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#EAF6FD" Offset="0.15"/>
        <GradientStop Color="#D9F0FC" Offset=".5"/>
        <GradientStop Color="#BEE6FD" Offset=".5"/>
        <GradientStop Color="#A7D9F5" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
    <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
    <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
    <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>
    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="6,1,6,1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Header" Value="{Binding site}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemHotBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Top"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Bottom"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-2,-2,-1,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                            <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PostInfoTagListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="contentPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="PostInfoTagDataTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding name}" TextTrimming="CharacterEllipsis" FontSize="16" Height="26" Padding="0,2,0,0" HorizontalAlignment="Left" Grid.Column="0" Cursor="Hand" MouseLeftButtonDown="TextBlock_MouseLeftButtonDown">
                <TextBlock.ToolTip>
                    <ToolTip Content="{Binding name}" Visibility="{Binding PlacementTarget, Converter={StaticResource TrimmedTextBlockVisibilityConverter}, RelativeSource={RelativeSource Self}}">
                    </ToolTip>
                </TextBlock.ToolTip>
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="Foreground" Value="{Binding tag_type, Converter={StaticResource TagColorConverter}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <Label Content="{Binding post_count, Converter={StaticResource PostCountConverter}}" Foreground="{Binding tag_type, Converter={StaticResource TagColorConverter}}" Padding="0,2,2,0" FontSize="16" Width="Auto" Height="26" HorizontalContentAlignment="Right" Grid.Column="1" Margin="5,0,0,0"/>
        </Grid>
    </DataTemplate>
    
    <DataTemplate x:Key="TabItemDataTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="316"/>
            </Grid.RowDefinitions>

            <ListBox Background="Black" Grid.Row="0" ItemsSource="{Binding tags, Converter={StaticResource TagGroupConverter}}" ItemTemplate="{DynamicResource PostInfoTagDataTemplate}" ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemContainerStyle="{DynamicResource PostInfoTagListBoxItemStyle}">
                <ListBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Expander Header="{Binding Name, Converter={StaticResource TagTypeToNameConverter}}" IsExpanded="True" Foreground="AliceBlue" FontWeight="Bold" FontSize="14">
                                                <ItemsPresenter />
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ListBox.GroupStyle>
            </ListBox>

            <DataGrid Grid.Row="1" ItemsSource="{Binding Mode=OneWay ,Converter={StaticResource PostDetailConverter}}" 
                      AutoGenerateColumns="False" 
                      CanUserResizeRows="False" 
                      CanUserResizeColumns="False" 
                      CanUserSortColumns="False" 
                      CanUserAddRows="False" 
                      CanUserDeleteRows="False" 
                      SelectionUnit="Cell" 
                      CanUserReorderColumns="False" 
                      SelectionMode="Single" 
                      HorizontalScrollBarVisibility="Disabled" 
                      VerticalScrollBarVisibility="Disabled" 
                      AutomationProperties.IsColumnHeader="False" 
                      AutomationProperties.IsRowHeader="False" 
                      HeadersVisibility="Column" 
                      VerticalAlignment="Bottom" 
                      HorizontalAlignment="Stretch" ScrollViewer.CanContentScroll="False" 
                      FontSize="16">
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Height" Value="275"/>
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding file_md5,Mode=OneWay}" Header="md5">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="Padding" Value="2,0,0,0"/>
                                <Setter Property="ToolTip" Value="{Binding Text,Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding file_size,Mode=OneWay, Converter={StaticResource FileSizeConverter}}" Header="大小" ElementStyle="{DynamicResource DataCellTextBlockStyle}"/>
                    <DataGridTextColumn Binding="{Binding image_format,Mode=OneWay}" Header="格式" ElementStyle="{DynamicResource DataCellTextBlockStyle}"/>
                    <DataGridTextColumn Binding="{Binding height,Mode=OneWay}" Header="高度" ElementStyle="{DynamicResource DataCellTextBlockStyle}"/>
                    <DataGridTextColumn Binding="{Binding width,Mode=OneWay}" Header="宽度" ElementStyle="{DynamicResource DataCellTextBlockStyle}"/>
                    <DataGridTemplateColumn Header="来源">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{DynamicResource DataCellTextBlockStyle}">                               
                                    <Hyperlink NavigateUri="{Binding source,Mode=OneWay}">
                                        <Run Text="{Binding NavigateUri,Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Hyperlink}}}" ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"/>
                                        <Hyperlink.Style>
                                            <Style TargetType="{x:Type Hyperlink}">
                                                <EventSetter Event="Hyperlink.Click" Handler="Hyperlink_Click"/>
                                                <Setter Property ="TextBlock.TextDecorations" Value ="{x:Null}"/>                                            
                                            </Style>                                      
                                        </Hyperlink.Style>
                                    </Hyperlink>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding prefer,Mode=OneWay}" Header="偏好" ElementStyle="{DynamicResource DataCellTextBlockStyle}"/>
                    <DataGridTextColumn Binding="{Binding score,Mode=OneWay}" Header="评分" ElementStyle="{DynamicResource DataCellTextBlockStyle}"/>
                    <DataGridTextColumn Binding="{Binding rating,Mode=OneWay}" Header="分级" ElementStyle="{DynamicResource DataCellTextBlockStyle}"/>
                    <DataGridTextColumn Binding="{Binding submitted_by,Mode=OneWay}" Header="上传" ElementStyle="{DynamicResource DataCellTextBlockStyle}"/>
                    <DataGridTextColumn Binding="{Binding submitted_on,Mode=OneWay, StringFormat=\{0:yyyy/MM/dd HH:mm:ss\}}" Header="日期" ElementStyle="{DynamicResource DataCellTextBlockStyle}"/>
                    <DataGridTemplateColumn Header="编号">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{DynamicResource DataCellTextBlockStyle}">
                                    <Hyperlink NavigateUri="{Binding Mode=OneWay,Converter={StaticResource SiteUrlConverter}}" ToolTip="{Binding NavigateUri,Mode=OneWay, RelativeSource={RelativeSource Self}}">
                                        <Run Text="{Binding id,Mode=OneWay}"/>
                                        <Hyperlink.Style>
                                            <Style TargetType="{x:Type Hyperlink}">
                                                <EventSetter Event="Hyperlink.Click" Handler="Hyperlink_Click"/>
                                                <Setter Property ="TextBlock.TextDecorations" Value ="{x:Null}"/>
                                            </Style>                                     
                                        </Hyperlink.Style>
                                    </Hyperlink>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <DataGrid.LayoutTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-90"/>
                    </TransformGroup>
                </DataGrid.LayoutTransform>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Height" Value="26"/>
                        <Setter Property="Width" Value="45"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="Background" Value="#6F88DA"/>
                        <Setter Property="Foreground" Value="#0A0E0D"/>
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <TransformGroup>
                                    <RotateTransform Angle="90"/>
                                </TransformGroup>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <TransformGroup>
                                    <RotateTransform Angle="90"/>
                                </TransformGroup>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.CellStyle>
            </DataGrid>
        </Grid>
    </DataTemplate>

    <Style x:Key="DataCellTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="Padding" Value="2,0,0,0"/>
    </Style>

</ResourceDictionary>